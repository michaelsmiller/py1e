# All local modules
import printing
import integrals

import argparse


disclaimer_text = """
Generated by script located in codegen/multipoles
using a combination of sympy and string formatting.
Contact Michael Miller (millerms@stanford.edu) if
you have any questions. Code based on recursion relations in
S. Obara, A. Saika. J. Chem. Phys. 84, 3963 (1986); https://doi.org/10.1063/1.450106
"""

function_disclaimer_text = """
This function is generated by python code in codegen/multipoles. 
Contact Michael Miller (millerms@stanford.edu) if you have any questions.
"""


base_filename="three_body_integrals"
h_filename = "{}.h".format(base_filename)
c_filename = "{}.cpp".format(base_filename) # C++ because of double3

def main(MAX_L):
    # Write TBIs
    # printing.write_integral_files(h_filename, c_filename, disclaimer_text, MAX_L)
    
    # Generate and print function for dipoles
    function_disclaimer = printing.generate_disclaimer(function_disclaimer_text)
    # print(printing.generate_update_func(1, "D", "DipoleMatrix", function_disclaimer, MAX_L))
    print(printing.generate_update_func(2, "Q", "QuadrupoleMatrix", function_disclaimer, MAX_L))

if __name__ == "__main__":
    # argument parsing
    parser = argparse.ArgumentParser(description='Generate property integral code')
    parser.add_argument('L', metavar='L', type=int,
                        help='Maximum angular momentum quantum desired')
    args = parser.parse_args()
    MAX_L = args.L

    main(MAX_L)
